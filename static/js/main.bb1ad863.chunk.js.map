{"version":3,"sources":["components/Profile/Profile.styled.js","components/Profile/StatsEl.js","components/Profile/Profile.js","components/Statistic/Statistic.styled.js","components/Statistic/Statistic.js","randomColor.js","components/FriendList/FriendList.styled.js","components/FriendList/FrendListElement.js","components/FriendList/FriendList.js","components/Transactions/Transactions.styled.js","components/Transactions/Transactions.js","GlobalStyle.js","components/App.js","index.js"],"names":["Wrapper","styled","div","Description","Avatar","img","Name","p","Tag","Location","Stats","ul","StatsElement","li","Label","span","Quantity","StatsEl","label","quantity","Profile","user","src","avatar","alt","name","tag","location","stats","followers","views","likes","elements","length","Statistics","section","props","title","Title","h2","List","ListElemnt","Percentage","Statistic","statistics","map","stat","key","id","style","backgroundColor","Math","floor","random","toString","substr","percentage","FriendsList","FriendsListElementS","OnlineIndicator","online","FrendListElement","friend","isOnline","width","FriendList","friends","Table","table","TableHead","tr","HeadTh","th","TableBodyTr","TableBodyTd","td","Transactions","transactions","item","type","amount","currency","Global","createGlobalStyle","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.bb1ad863.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 0 auto;\r\n  width: 250px;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  padding-top: 30px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  display: block;\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  color: #122236;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  margin-bottom: 11px;\r\n`;\r\n\r\nexport const Tag = styled.p`\r\n  color: #768696;\r\n  font-size: 14px;\r\n  margin-bottom: 11px;\r\n`;\r\n\r\nexport const Location = styled.p`\r\n  color: #768696;\r\n  font-size: 14px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const Stats = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  background-color: #f3f6f9;\r\n  border-top: 1px solid #e4e9f0;\r\n`;\r\n\r\nexport const StatsElement = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 33.3333333%;\r\n  min-height: 76px;\r\n  border-right: 1px solid #e4e9f0;\r\n\r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  font-size: 12px;\r\n  color: #768696;\r\n  line-height: 32px;\r\n`;\r\n\r\nexport const Quantity = styled.span`\r\n  color: #1f3349;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n`;\r\n","import React from \"react\";\r\nimport { StatsElement, Label, Quantity } from \"./Profile.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StatsEl = ({ label, quantity }) => (\r\n  <StatsElement>\r\n    <Label>{label}</Label>\r\n    <Quantity>{quantity}</Quantity>\r\n  </StatsElement>\r\n);\r\n\r\nexport default StatsEl;\r\n\r\nStatsEl.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  quantity: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Wrapper,\r\n  Avatar,\r\n  Description,\r\n  Name,\r\n  Tag,\r\n  Location,\r\n  Stats,\r\n} from \"./Profile.styled\";\r\nimport StatsEl from \"./StatsEl\";\r\n\r\nconst Profile = ({ user }) => (\r\n  <Wrapper>\r\n    <Description>\r\n      <Avatar src={user.avatar} alt={user.name} />\r\n      <Name>{user.name}</Name>\r\n      <Tag>{\"@\" + user.tag}</Tag>\r\n      <Location>{user.location}</Location>\r\n    </Description>\r\n\r\n    <Stats>\r\n      <StatsEl label=\"Followers\" quantity={user.stats.followers} />\r\n      <StatsEl label=\"Views\" quantity={user.stats.views} />\r\n      <StatsEl label=\"Likes\" quantity={user.stats.likes} />\r\n    </Stats>\r\n  </Wrapper>\r\n);\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.exact({\r\n    avatar: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    stats: PropTypes.exact({\r\n      followers: PropTypes.number.isRequired,\r\n      views: PropTypes.number.isRequired,\r\n      likes: PropTypes.number.isRequired,\r\n    }),\r\n  }),\r\n};\r\nexport default Profile;\r\n","import styled from \"styled-components\";\r\nimport stats from \"../../data/statistical-data.json\";\r\n\r\nlet mainWidth = 250;\r\nconst elements = stats.length;\r\n\r\nexport const Statistics = styled.section`\r\n  margin: 0 auto;\r\n  width: ${mainWidth}px;\r\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\r\n  padding-top: ${props => (props.title ? \"25px\" : \"0\")};\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n  color: #475965;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  font-weight: 300;\r\n  display: flex;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ListElemnt = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: ${mainWidth / elements}px;\r\n  height: ${mainWidth / elements}px;\r\n  max-height: 60px;\r\n  padding-top: 3%;\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  color: #fff;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const Percentage = styled.span`\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-family: \"Roboto\", sans-serif;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Statistics,\r\n  Title,\r\n  List,\r\n  ListElemnt,\r\n  Label,\r\n  Percentage\r\n} from \"./Statistic.styled\";\r\nimport { getRandomColor } from \"../../randomColor\";\r\n\r\nconst Statistic = ({ statistics, title }) => (\r\n  <Statistics title={title}>\r\n    {title && <Title>{title}</Title>}\r\n\r\n    <List>\r\n      {statistics.map(stat => (\r\n        <ListElemnt key={stat.id} style={{ backgroundColor: getRandomColor() }}>\r\n          <Label>{stat.label}</Label>\r\n          <Percentage>{stat.percentage}%</Percentage>\r\n        </ListElemnt>\r\n      ))}\r\n    </List>\r\n  </Statistics>\r\n);\r\n\r\nStatistic.propTypes = {\r\n  statistics: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n      id: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Statistic;\r\n","export function getRandomColor() {\r\n  const hex = Math.floor(Math.random() * 0xffffff);\r\n  return \"#\" + (\"000000\" + hex.toString(16)).substr(-6);\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const FriendsList = styled.ul`\r\n  margin: 0 auto;\r\n  width: 250px;\r\n  list-style: none;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const FriendsListElementS = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\r\n  margin-bottom: 8px;\r\n  padding: 4px 8px;\r\n`;\r\n\r\nexport const OnlineIndicator = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  background-color: ${(props) => (props.online ? \"green\" : \"red\")};\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Avatar = styled.img`\r\n  border-radius: 5px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-size: 22px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  OnlineIndicator,\r\n  FriendsListElementS,\r\n  Avatar,\r\n  Name,\r\n} from \"./FriendList.styled\";\r\n\r\nconst FrendListElement = ({ friend }) => (\r\n  <FriendsListElementS>\r\n    <OnlineIndicator online={friend.isOnline}></OnlineIndicator>\r\n    <Avatar src={friend.avatar} alt=\"avatar\" width=\"60\"></Avatar>\r\n    <Name>{friend.name}</Name>\r\n  </FriendsListElementS>\r\n);\r\n\r\nFrendListElement.propTypes = {\r\n  friend: PropTypes.exact({\r\n    avatar: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default FrendListElement;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FriendsList } from \"./FriendList.styled\";\r\nimport FrendListElement from \"./FrendListElement\";\r\n\r\nconst FriendList = ({ friends }) => (\r\n  <FriendsList>\r\n    {friends.map((friend) => (\r\n      <FrendListElement friend={friend} key={friend.id} />\r\n    ))}\r\n  </FriendsList>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      avatar: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default FriendList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Table = styled.table`\r\n  width: 870px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 1px 3px 0px rgba(191, 205, 222, 0.75);\r\n  border-spacing: 0;\r\n`;\r\n\r\nexport const TableHead = styled.tr`\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 13px;\r\n  background-color: #00bcd4;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nexport const HeadTh = styled.th`\r\n  width: 33.333%;\r\n  padding: 15px;\r\n  border-right: 1px solid #fff;\r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n\r\nexport const TableBodyTr = styled.tr`\r\n  &:nth-child(even) {\r\n    background-color: #ecf2f3;\r\n  }\r\n`;\r\n\r\nexport const TableBodyTd = styled.td`\r\n  color: #5c6975;\r\n  font-size: 15px;\r\n  padding: 15px;\r\n  text-align: center;\r\n  border-right: 1px solid #e0e6e7;\r\n  &:last-child {\r\n    border-right: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  HeadTh,\r\n  TableBodyTr,\r\n  TableBodyTd\r\n} from \"./Transactions.styled\";\r\n\r\nconst Transactions = ({ transactions }) => (\r\n  <Table>\r\n    <thead>\r\n      <TableHead>\r\n        <HeadTh>Type</HeadTh>\r\n        <HeadTh>Amount</HeadTh>\r\n        <HeadTh>Currency</HeadTh>\r\n      </TableHead>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {transactions.map(item => (\r\n        <TableBodyTr key={item.id}>\r\n          <TableBodyTd>{item.type}</TableBodyTd>\r\n          <TableBodyTd>{item.amount}</TableBodyTd>\r\n          <TableBodyTd>{item.currency}</TableBodyTd>\r\n        </TableBodyTr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nTransactions.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired\r\n};\r\n\r\nexport default Transactions;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const Global = createGlobalStyle`\r\n@font-face {\r\n    font-family:'Roboto' ;\r\n    src: url('https://fonts.googleapis.com/css?family=Roboto:300,400&display=swap');\r\n}\r\n\r\nhtml {\r\n    box-sizing: border-box;\r\n    font-family: \"Roboto\", sans-serif;\r\n\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n    box-sizing: inherit;\r\n}\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    padding-top: 40px;\r\n}\r\n`;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport Statisctic from \"./Statistic/Statistic\";\r\nimport FriendList from \"./FriendList/FriendList\";\r\nimport Transactions from \"./Transactions/Transactions\";\r\nimport { Global } from \"../GlobalStyle\";\r\nimport user from \"../data/user.json\";\r\nimport stats from \"../data/statistical-data.json\";\r\nimport friends from \"../data/friends.json\";\r\nimport transactions from \"../data/transactions.json\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Global />\r\n    <Profile user={user} />\r\n    <Statisctic statistics={stats} title=\"Upload stats\" />\r\n    <FriendList friends={friends} />\r\n    <Transactions transactions={transactions} />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport App from \"./components/App\";\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}